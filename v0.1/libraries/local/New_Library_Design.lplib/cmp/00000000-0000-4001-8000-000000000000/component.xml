<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<!-- This file contains comments for documentation -->
<component version="0">
 <meta>
  <uuid>00000000-0000-4001-8000-000000000000</uuid>
  <version>0.1</version>
  <author>LibrePCB</author>
  <created>2015-03-01T20:00:00Z</created>
  <last_modified>2015-03-01T20:00:00Z</last_modified>
  <deprecated>false</deprecated>
  <name locale="en_US">NE555</name>
  <description locale="en_US">description...</description>
  <keywords locale="en_US">comma,separated,list,of,keywords</keywords>
  <category>00000000-0000-4001-8000-000000000000</category> <!-- component category UUID (add more <category> elements to specify multiple categories) -->
 </meta>
 <attributes>
  <!--
    Attributes of this component; For example, the component "resistor" needs at least an attribute for the "resistance" value. They can be used:
      - as the "value" of the component
      - as attributes for a SPICE simulation
      - to automatically create BOM lists inclusive all important component attributes
    
    XML Attributes:
      - key:  A unique key which identifies this attribute. Instead of a UUID we use a string as identifier because of the easier handling.
              String style: en_US, uppercase, underscores instead of spaces, no special characters
      - type: The datatype of the attribute. Available types (tbc): string (UTF-8), resistance, capacitance, inductance
      - unit: The default unit (available units depends on the attribute type; empty string if the attribute type does not need a unit)
    XML Childs:
      - name:             The name of the attribute (in different languages)
      - description:      A short description of the attribute (in different languages)
      - default_value:    The default value of this attribute (in different languages). This value (which can be empty) will be used when such a component is added to a schematic. 
                          Normally, this attribute does not need multilingual support, so the only needed locale is "en_US". 
                          But sometimes (especially when the attribute's type is "string") it might be useful to use different values for different languages.
  -->
  <attribute key="RESISTANCE" type="resistance" unit="ohm">
   <name locale="en_US">Resistance</name>
   <description locale="en_US">The nominal resistance of the resistor.</description>
   <default_value locale="en_US"></default_value>
  </attribute>
 </attributes>
 <properties>
  <schematic_only>false</schematic_only> <!-- If true, no devices are available for this component, so it can be added only to schematics and not to boards. -->
  <default_value locale="en_US"></default_value> <!-- This is the value of the component after adding it to a schematic. The user then can change the value if needed. The value is always a string and can contain variables which represent an attribute (syntax: ${ATTRIBUTE_NAME}). The default value can be defined for each language separately. -->
  <prefix norm="">U</prefix> <!-- Prefix for the component name (R5, U8,...). Different prefixes for different norms can be defined. There must be exactly one prefix with norm="" to define the default prefix. -->
 </properties>
 <signals>
  <!--
    All signals of this component (they can be connected to pads and pins). Attributes:
      - uuid:             The uuid of the signal. Must be unique in this component.
      - role:             The signal role (used for the ERC)
                            - power:        Power pins of the component (e.g. VCC and GND)
                            - input:        Input pins (high impedance)
                            - output:       Output pins
                            - inout:        Input/Output pins
                            - opendrain:    Open Collector / Open Drain Output Pins
                            - passive:      Passive pins (e.g. R/C/L pins)
      - required:         If true, this signal must be always connected to the netlist of a project. Otherwise an ERC error will occur.
      - negated:          Defines if the signal has an inverted logic (low active). This will automatically mark the connected symbol pin as inverted.
      - clock:            Defines if the signal is a clock signal. This will automatically mark the connected symbol pin as a clock signal.
      - forced_net_name:  If this is a non-empty string, the name of the net signal which is connected to this component signal will be forced to this string. 
                          This should be used only for supply symbols (GND, VCC, ...). The string can contain variables like $CMP::VALUE.
      - node value:       The signal name (en_US, uppercase). Do not use "/RESET", "!RESET" or something similar for inverted signals! Use the attribute negated="true" instead.
  -->
  <signal uuid="71a44db9-5e42-405f-b6e4-b4725ae37af3" role="power"  required="true" negated="false" clock="false" forced_net_name="">GND</signal>
  <signal uuid="4e391ba5-949a-4f6e-83f4-ea382eed7e3a" role="input"  required="true" negated="false" clock="false" forced_net_name="">TRIGGER</signal>
  <signal uuid="a9d3d159-fca9-417e-8bba-13829caa6ae5" role="output" required="true" negated="false" clock="false" forced_net_name="">OUTPUT</signal>
  <signal uuid="da30b112-9ab0-4715-8a6a-9e5414169fd4" role="input"  required="true" negated="true"  clock="false" forced_net_name="">RESET</signal>
  <signal uuid="0077fd4c-4ff5-49c7-ac69-02fb7452f7e0" role="input"  required="true" negated="false" clock="false" forced_net_name="">CONTROL</signal>
  <signal uuid="dc7b9d6e-d32e-4521-8a75-71003d2c2f56" role="input"  required="true" negated="false" clock="false" forced_net_name="">THRESHOLD</signal>
  <signal uuid="af5ff768-2a2b-4f34-bae1-c3b6f02a82f4" role="inout"  required="true" negated="false" clock="false" forced_net_name="">DISCHARGE</signal>
  <signal uuid="21ac13f7-ebbd-494b-8a56-024c5b2ee95f" role="power"  required="true" negated="false" clock="false" forced_net_name="">VCC</signal>
 </signals>
 <symbol_variants default="a3a3db3e-c03e-4b3a-b916-638f75e11d9a">
  <!-- Each component can define multiple symbol variants, and each symbol variant can contain multiple symbols. -->
  <variant uuid="a3a3db3e-c03e-4b3a-b916-638f75e11d9a" norm="DIN EN 1234">
   <name locale="en_US">Euro</name>
   <description locale="en_US">European Variant</description>
   <symbol_items>
    <!--
      All symbol items of this symbol variant in the same order as they should be added to schematic when adding such a component.
      
      Attributes:
        - uuid:     The uuid of the symbol variant item (must be unique in its symbol variant)
        - symbol:   The uuid of the library symbol
        - required: If this is true and this symbol is not places in the schematic, the ERC will give an error.
        - suffix:   The component name suffix of this symbol (e.g. "A", "B", "C" to produce component names like "IC1A", "IC1B", "IC1C"). Must be unique in the symbol variant!
    -->
    <item uuid="adae210d-c505-487b-9fe8-834a24f14638" symbol="00000000-0000-4001-8000-000000000000" required="true" suffix="A">
     <pin_signal_map>
      <!--
        This list must contain every pin of the specified symbol! Attributes:
          - pin:        The UUID of the symbol's pin
          - display:    Specifies which text should be displayed next to the pin
                          - none:             No text
                          - pin_name:         The name of the symbol's pin
                          - component_signal: The name of the connected component's signal (only allowed when the pin is connected to a signal)
                          - net_signal:       The name of the connected net signal in the circuit (only allowed when the pin is connected to a signal). The text is empty if no net signal is connected.
          - node value: The UUID of the component's signal which should be connected to the specified pin (empty string = not connected)
      -->
      <map pin="702df32a-635f-46e9-85d2-5b7e2c20aa87" display="component_signal">71a44db9-5e42-405f-b6e4-b4725ae37af3</map>
      <map pin="1339ffc8-afb2-4137-9d37-d9801ac2bfd0" display="component_signal">4e391ba5-949a-4f6e-83f4-ea382eed7e3a</map>
      <map pin="8207ee9b-89e5-41bc-a633-078952a6c370" display="component_signal">a9d3d159-fca9-417e-8bba-13829caa6ae5</map>
      <map pin="b5ec7a0f-0f26-482e-a68e-e9a8f108cb80" display="component_signal">da30b112-9ab0-4715-8a6a-9e5414169fd4</map>
      <map pin="10f7c99e-9751-409e-aace-d4fa0f21375f" display="component_signal">0077fd4c-4ff5-49c7-ac69-02fb7452f7e0</map>
      <map pin="255e12e0-00b7-4563-b82c-42a4899fddf1" display="component_signal">dc7b9d6e-d32e-4521-8a75-71003d2c2f56</map>
      <map pin="b8aa2aa5-9b1b-4d9a-90c5-b584fe48f5a4" display="component_signal">af5ff768-2a2b-4f34-bae1-c3b6f02a82f4</map>
      <map pin="db2223ee-84ce-42ef-93b9-ac6a50b07805" display="component_signal">21ac13f7-ebbd-494b-8a56-024c5b2ee95f</map>
     </pin_signal_map>
    </item>
   </symbol_items>
  </variant>
 </symbol_variants>
 <!-- <spice_models>
   TODO
 </spice_models> -->
</component>
